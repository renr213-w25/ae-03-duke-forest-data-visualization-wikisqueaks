---
title: "AE 03: Duke Forest + data visualization"
editor: 
  markdown: 
    wrap: sentence
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(openintro)
```

## Exercise 1

Suppose you're helping some family friends who are looking to buy a house in Duke Forest.
As they browse Zillow listings, they realize some houses have garages and others don't, and they wonder: **Does having a garage make a difference?**

Luckily, you can help them answer this question with data visualization!

-   Make histograms of the prices of houses in Duke Forest based on whether they have a garage.
    -   In order to do this, you will first need to create a new variable called `garage` (with levels `"Garage"` and `"No garage"`).
    -   Below is the code for creating this new variable. Here, we `mutate()` the `duke_forest` data frame to add a new variable called `garage` which takes the value `"Garage"` if the text string `"Garage"` is detected in the `parking` variable and takes the test string `"No garage"` if not.

```{r}
#| label: garage
#| eval: false

duke_forest |>
  mutate(garage = if_else(str_detect(parking, "Garage"),   "Garage", "No garage"))
```

-   Then, facet by `garage` and use different colors for the two facets.
-   Choose an appropriate binwidth and decide whether a legend is needed, and turn it off if not.
-   Include informative title and axis labels.
-   Finally, include a brief (2-3 sentence) narrative comparing the distributions of prices of Duke Forest houses that do and don't have garages. Your narrative should touch on whether having a garage "makes a difference" in terms of the price of the house.

```{r}
#| label: price-garage
#| fig-cap: "Figure 1. Comparison of listing prices for houses with and without garages in the Duke Forest neighbourhood of Durham, NC, in 2020."

duke_forest |>
  mutate(garage = if_else(str_detect(parking, "Garage"),   "Garage", "No garage")) |>
  mutate(price_thousands = price/1000) |>
  ggplot(aes(x=price_thousands, fill = garage)) +
  geom_histogram(binwidth = 200) +
  facet_wrap(vars(garage)) +
  theme_classic() +
  theme(legend.position = "none",
        panel.spacing = unit(0.5, "cm"),
        plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm")) +
  labs(x="Listing Price (Thousands $)",
       y= "Number of Houses on Market",
       title = "Comparison of Prices of Houses with or without Garages",
       subtitle = "Duke Forest Neighbourhood, Durham, NC, November 2020")


```

In comparing the histograms of prices of houses with and without a garage in Figure 1, there are a few interesting observations. Houses with garages are quite concentrated around $500k in price, with a skew to the right of more luxury homes. In contrast, houses without garages are more dispersed, and shows a notable increase in houses below \$400k, and a lighter right tail of expensive homes. Therefore, I think we can conclude that, in general, houses without a garage are more variable in price and tend can tend towards lower prices, while houses with a garage are more likely to sell for an average price or more.

::: callout-important
Now is a good time to render, commit, and push.
Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.
:::

## Exercise 2

It's expected that within any given market larger houses will be priced higher.
It's also expected that the age of the house will have an effect on the price.
However in some markets new houses might be more expensive while in others new construction might mean "no character" and hence be less expensive.
So your family friends ask: "In Duke Forest, do houses that are bigger and more expensive tend to be newer ones than those that are smaller and cheaper?"

Once again, data visualization skills to the rescue!

-   Create a scatter plot to exploring the relationship between `price` and `area`, conditioning for `year_built`.
-   Use `geom_smooth()` with the argument `se = FALSE` to add a smooth curve fit to the data and color the points by `year_built`.
-   Include informative title, axis, and legend labels.
-   Discuss each of the following claims (1-2 sentences per claim). Your discussion should touch on specific things you observe in your plot as evidence for or against the claims.
    -   Claim 1: Larger houses are priced higher.
    -   Claim 2: Newer houses are priced higher.
    -   Claim 3: Bigger and more expensive houses tend to be newer ones than smaller and cheaper ones.

```{r, warning=FALSE}
#| label: price-area
#| fig-cap: "Figure 2. Comparison of house listing price vs. square footage considering year of construction."

duke_forest |>
  mutate(price_thousands = price / 1000) |>
ggplot(aes(x=area, y=price_thousands, fill=year_built)) +
  geom_point(shape=21, size = 4, stroke=1, alpha = 0.6) +
  geom_smooth(se=FALSE, color="darkblue", linewidth=0.3) +
  scale_fill_viridis_c(option = "D",) +
  theme_classic() +
  labs(x = "House Area (Square Feet)",
       y = "List Price ($, Thousands)",
       title = "Comparison of House Area with List Price and Year of Construction",
       subtitle = "Duke Forest Neighbourhood, Durham, NC, November 2020",
       fill = "Year Built")


```
### Claim 1: Larger houses are priced higher
The plot supports the claim that, in general, the housing prices increase with square footage, at least up to 4000 sq ft. At this point, the data because highly variable suggesting another factor is at play.

### Claim 2: Newer houses are priced higher.
It is not obvious in the plot that newer prices are priced higher. I would say that the plot does not support this data
### Claim 3: Bigger and more expensive houses tend to be newer ones than smaller and cheaper ones.
The biggest and most expensive homes do appear to be mostly built between 1975-2000, but there are also also many newer homes that are very cheap. Therefore I think it would be more accurate to say that the biggest and most expensive homes are rarely *older* than 25 years.


::: callout-important
Now is a good time to render, commit, and push.
Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.
:::
